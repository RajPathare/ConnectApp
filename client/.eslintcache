[{"/home/raj/Desktop/ConnectApp/client/src/index.js":"1","/home/raj/Desktop/ConnectApp/client/src/App.js":"2","/home/raj/Desktop/ConnectApp/client/src/components/layout/Navbar.js":"3","/home/raj/Desktop/ConnectApp/client/src/components/layout/Landing.js":"4","/home/raj/Desktop/ConnectApp/client/src/components/auth/Login.js":"5","/home/raj/Desktop/ConnectApp/client/src/components/auth/Register.js":"6","/home/raj/Desktop/ConnectApp/client/src/store.js":"7","/home/raj/Desktop/ConnectApp/client/src/reducers/index.js":"8","/home/raj/Desktop/ConnectApp/client/src/reducers/alertReducer.js":"9","/home/raj/Desktop/ConnectApp/client/src/actions/types.js":"10","/home/raj/Desktop/ConnectApp/client/src/actions/alert.js":"11","/home/raj/Desktop/ConnectApp/client/src/components/layout/Alert.js":"12","/home/raj/Desktop/ConnectApp/client/src/actions/auth.js":"13","/home/raj/Desktop/ConnectApp/client/src/reducers/auth.js":"14","/home/raj/Desktop/ConnectApp/client/src/utils/setAuthToken.js":"15","/home/raj/Desktop/ConnectApp/client/src/components/dashboard/Dashboard.js":"16","/home/raj/Desktop/ConnectApp/client/src/components/routing/PrivateRoute.js":"17","/home/raj/Desktop/ConnectApp/client/src/reducers/profile.js":"18","/home/raj/Desktop/ConnectApp/client/src/actions/profile.js":"19","/home/raj/Desktop/ConnectApp/client/src/components/layout/Spinner.js":"20","/home/raj/Desktop/ConnectApp/client/src/components/profile-form/CreateProfile.js":"21","/home/raj/Desktop/ConnectApp/client/src/components/dashboard/DashboardActions.js":"22","/home/raj/Desktop/ConnectApp/client/src/components/profile-form/EditProfile.js":"23","/home/raj/Desktop/ConnectApp/client/src/components/profile-form/AddExperience.js":"24","/home/raj/Desktop/ConnectApp/client/src/components/profile-form/AddEducation.js":"25","/home/raj/Desktop/ConnectApp/client/src/components/dashboard/Experience.js":"26","/home/raj/Desktop/ConnectApp/client/src/components/dashboard/Education.js":"27","/home/raj/Desktop/ConnectApp/client/src/components/profiles/Profiles.js":"28","/home/raj/Desktop/ConnectApp/client/src/components/profiles/ProfileItem.js":"29","/home/raj/Desktop/ConnectApp/client/src/components/profile/Profile.js":"30","/home/raj/Desktop/ConnectApp/client/src/components/profile/ProfileTop.js":"31","/home/raj/Desktop/ConnectApp/client/src/components/profile/ProfileAbout.js":"32","/home/raj/Desktop/ConnectApp/client/src/components/profile/ProfileExperience.js":"33","/home/raj/Desktop/ConnectApp/client/src/components/profile/ProfileEducation.js":"34"},{"size":272,"mtime":1610378048940,"results":"35","hashOfConfig":"36"},{"size":2399,"mtime":1612344198564,"results":"37","hashOfConfig":"36"},{"size":1654,"mtime":1612340388444,"results":"38","hashOfConfig":"36"},{"size":1157,"mtime":1612163669174,"results":"39","hashOfConfig":"36"},{"size":2026,"mtime":1610448136993,"results":"40","hashOfConfig":"36"},{"size":2928,"mtime":1610448304766,"results":"41","hashOfConfig":"36"},{"size":375,"mtime":1610377900481,"results":"42","hashOfConfig":"36"},{"size":244,"mtime":1610470671511,"results":"43","hashOfConfig":"36"},{"size":382,"mtime":1610378669666,"results":"44","hashOfConfig":"36"},{"size":697,"mtime":1612339590143,"results":"45","hashOfConfig":"36"},{"size":458,"mtime":1610384267848,"results":"46","hashOfConfig":"36"},{"size":646,"mtime":1610384048645,"results":"47","hashOfConfig":"36"},{"size":2771,"mtime":1612165396371,"results":"48","hashOfConfig":"36"},{"size":1668,"mtime":1612257219886,"results":"49","hashOfConfig":"36"},{"size":258,"mtime":1610445615924,"results":"50","hashOfConfig":"36"},{"size":1952,"mtime":1612343423408,"results":"51","hashOfConfig":"36"},{"size":575,"mtime":1610470370924,"results":"52","hashOfConfig":"36"},{"size":1114,"mtime":1612339710113,"results":"53","hashOfConfig":"36"},{"size":7033,"mtime":1612345287456,"results":"54","hashOfConfig":"36"},{"size":294,"mtime":1612340645438,"results":"55","hashOfConfig":"36"},{"size":6943,"mtime":1612174852449,"results":"56","hashOfConfig":"36"},{"size":611,"mtime":1612175279338,"results":"57","hashOfConfig":"36"},{"size":8220,"mtime":1612348769991,"results":"58","hashOfConfig":"36"},{"size":3454,"mtime":1612343303230,"results":"59","hashOfConfig":"36"},{"size":3415,"mtime":1612343293706,"results":"60","hashOfConfig":"36"},{"size":1612,"mtime":1612257350809,"results":"61","hashOfConfig":"36"},{"size":1599,"mtime":1612257476057,"results":"62","hashOfConfig":"36"},{"size":1283,"mtime":1612343554343,"results":"63","hashOfConfig":"36"},{"size":1306,"mtime":1612343365321,"results":"64","hashOfConfig":"36"},{"size":2769,"mtime":1612350569438,"results":"65","hashOfConfig":"36"},{"size":1992,"mtime":1612347814623,"results":"66","hashOfConfig":"36"},{"size":877,"mtime":1612350485482,"results":"67","hashOfConfig":"36"},{"size":763,"mtime":1612349546419,"results":"68","hashOfConfig":"36"},{"size":769,"mtime":1612350590133,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"v56vz8",{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/raj/Desktop/ConnectApp/client/src/index.js",[],["146","147"],"/home/raj/Desktop/ConnectApp/client/src/App.js",["148"],"import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Dashboard from './components/dashboard/Dashboard';\n\nimport PrivateRoute from './components/routing/PrivateRoute';\n\nimport Alert from './components/layout/Alert';\n\nimport CreateProfile from './components/profile-form/CreateProfile';\nimport EditProfile from './components/profile-form/EditProfile';\n\nimport AddExperience from './components/profile-form/AddExperience';\nimport AddEducation from './components/profile-form/AddEducation';\n\nimport Profiles from './components/profiles/Profiles';\n\nimport Profile from './components/profile/Profile';\n\nimport setAuthToken from './utils/setAuthToken';\nimport { loadUser } from './actions/auth';\n\nif(localStorage.token) {\n    setAuthToken(localStorage.token);\n}\n\nconst App = (props) => {\n\n    useEffect(()=> {\n        props.loadUser()\n    },[])\n// [] => run only once (componentDidMount)\n\n    return (\n        <Router>\n            <Fragment>\n                <Navbar />\n                <Route exact path='/' component={Landing} />\n                <section className=\"container\">\n                    <Alert />\n                    <Switch>\n                        <Route exact path='/login' component={Login} />\n                        <Route exact path='/register' component={Register} />\n                        <Route exact path='/profiles' component={Profiles} />\n                        <Route exact path='/profile/:id' component={Profile} />\n                        <PrivateRoute exact path='/dashboard' component={Dashboard} />\n                        <PrivateRoute exact path='/create-profile' component={CreateProfile} />\n                        <PrivateRoute exact path='/edit-profile' component={EditProfile} />\n                        <PrivateRoute exact path='/add-experience' component={AddExperience} />\n                        <PrivateRoute exact path='/add-education' component={AddEducation} />\n                    </Switch>\n                </section>\n            </Fragment>\n        </Router>\n    )\n\n}\n\nexport default connect(null,{\n    loadUser\n})(App);","/home/raj/Desktop/ConnectApp/client/src/components/layout/Navbar.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/layout/Landing.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/auth/Login.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/auth/Register.js",[],"/home/raj/Desktop/ConnectApp/client/src/store.js",[],"/home/raj/Desktop/ConnectApp/client/src/reducers/index.js",[],"/home/raj/Desktop/ConnectApp/client/src/reducers/alertReducer.js",["149"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n    switch(action.type){\n        case SET_ALERT:\n            return [...state, action.payload];\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== action.payload);\n        default:\n            return state;\n    }\n}","/home/raj/Desktop/ConnectApp/client/src/actions/types.js",[],"/home/raj/Desktop/ConnectApp/client/src/actions/alert.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/layout/Alert.js",[],"/home/raj/Desktop/ConnectApp/client/src/actions/auth.js",[],"/home/raj/Desktop/ConnectApp/client/src/reducers/auth.js",["150"],"import { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, ACCOUNT_DELETED } from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n};\n\nexport default (state = initialState, action) => {\n    switch(action.type){\n        case REGISTER_SUCCESS:\n            localStorage.setItem('token', action.payload.token);\n            return {...state, ...action.payload, isAuthenticated: true, loading: false};\n        case REGISTER_FAIL:\n            localStorage.removeItem('token');\n            return {...state, token: null, isAuthenticated: false, loading: false};\n        case USER_LOADED:\n            return {...state, isAuthenticated: true, loading: false, user: action.payload}\n        case AUTH_ERROR: \n            localStorage.removeItem('token');\n            return {...state, token: null, isAuthenticated: false, loading: false};\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', action.payload.token);\n            return {...state, ...action.payload, isAuthenticated: true, loading: false};\n        case LOGIN_FAIL:\n            localStorage.removeItem('token');\n            return {...state, token: null, isAuthenticated: false, loading: false};\n        case LOGOUT:\n            localStorage.removeItem('token');\n            return {...state, token: null, isAuthenticated: false, loading: false};\n        case ACCOUNT_DELETED:\n            localStorage.removeItem('token');\n            return {...state, token: null, isAuthenticated: false, loading: false};\n        default:\n            return state;\n    }\n}\n\n","/home/raj/Desktop/ConnectApp/client/src/utils/setAuthToken.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/dashboard/Dashboard.js",["151"],"import React, { useEffect, Fragment } from 'react';\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\n\nimport Spinner from '../layout/Spinner';\n\nimport DashboardActions from './DashboardActions';\n\nimport Experience from './Experience';\nimport Education from './Education';\n\nconst Dashboard = (props) => {\n\n    useEffect(()=> {\n        props.getCurrentProfile();\n    },[]);\n\n    return props.profile.loading && props.profile.profile ? <Spinner /> : <Fragment>\n        <h1 className=\"large text-primary\">\n            Dashboard\n        </h1>\n        <p className=\"lead\">\n            {/* && operator here -> if props.auth.user is present, only then show the username */}\n            <i className=\"fas fas-user\"></i> Welcome { props.auth.user && props.auth.user.user.name }\n        </p>\n        { props.profile.profile !== null ? <Fragment>\n            <DashboardActions />\n            <Experience  experience={props.profile.profile.experience} />\n            <Education  education={props.profile.profile.education} />\n\n            <div className=\"my-2\">\n                <button onClick={() => props.deleteAccount()} className=\"btn btn-danger\">Delete Account</button>\n            </div>\n\n        </Fragment> : <Fragment>\n            <p>You have not set a profile, please add some info!</p>\n            <Link to='/create-profile' className=\"btn btn-primary my-1\">Create Profile</Link>\n        </Fragment> }\n\n    </Fragment>\n}\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n    deleteAccount: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, {\n    getCurrentProfile,\n    deleteAccount\n})(Dashboard);\n","/home/raj/Desktop/ConnectApp/client/src/components/routing/PrivateRoute.js",[],"/home/raj/Desktop/ConnectApp/client/src/reducers/profile.js",["152"],"\nimport { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, GET_PROFILES, GET_REPOS } from '../actions/types';\n\nconst initialState = {\n    profile: null, // current profile for the user + any profile the user vists\n    profiles: [], // we will be listing profiles for all users, this will go here\n    repos: [], // git repos\n    loading: true,\n    error: {} // errors are added here\n}\n\nexport default (state = initialState, action) => {\n    switch(action.type){\n        case GET_PROFILE:\n            return {...state, profile: action.payload, loading: false};\n        case PROFILE_ERROR:\n            return {...state, error: action.payload, loading: false};\n        case CLEAR_PROFILE: \n            return {...state, profile: null, repos: [], loading: false};\n        case UPDATE_PROFILE:\n            return {...state, profile: action.payload, loading: false};\n        case GET_PROFILES:\n            return {...state, profiles: action.payload, loading: false};\n        case GET_REPOS:\n            return {...state, repos: action.payload, loading: false};\n        default:\n            return state;\n    }\n}","/home/raj/Desktop/ConnectApp/client/src/actions/profile.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/layout/Spinner.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/profile-form/CreateProfile.js",["153"],"import React, { useState, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile } from '../../actions/profile';\n\nconst CreateProfile = (props) => {\n\n\n    const [formData, setFormData] = useState({\n\n        company: '',\n        website: '',\n        location: '',\n        status: '',\n        skills: '',\n        githubusername: '',\n        bio: '',\n        twitter: '',\n        facebook: '',\n        linkedin: '',\n        youtube: '',\n        instagram: ''\n\n    });\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n    const {\n\n        company,\n        website,\n        location,\n        status,\n        skills,\n        githubusername,\n        bio,\n        twitter,\n        facebook,\n        linkedin,\n        youtube,\n        instagram\n\n    } = formData;\n\n\n    const onChange = (e) => {\n        setFormData({\n            ...formData, [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        props.createProfile(formData, props.history);\n    }\n\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                Create Your Profile\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\n                profile stand out\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={(e)=> onSubmit(e)}>\n                <div className=\"form-group\">\n                <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\n                    <option value=\"0\">* Select Professional Status</option>\n                    <option value=\"Developer\">Developer</option>\n                    <option value=\"Junior Developer\">Junior Developer</option>\n                    <option value=\"Senior Developer\">Senior Developer</option>\n                    <option value=\"Manager\">Manager</option>\n                    <option value=\"Student or Learning\">Student or Learning</option>\n                    <option value=\"Instructor\">Instructor or Teacher</option>\n                    <option value=\"Intern\">Intern</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <small className=\"form-text\"\n                    >Give us an idea of where you are at in your career</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={(e) => onChange(e)} />\n                <small className=\"form-text\"\n                    >Could be your own company or one you work for</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={(e) => onChange(e)} />\n                <small className=\"form-text\"\n                    >Could be your own or a company website</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={(e) => onChange(e)} />\n                <small className=\"form-text\"\n                    >City & state suggested (eg. Boston, MA)</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={(e) => onChange(e)} />\n                <small className=\"form-text\"\n                    >Please use comma separated values (eg.\n                    HTML,CSS,JavaScript,PHP)</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Github Username\"\n                    name=\"githubusername\"\n                    value={githubusername} onChange={(e) => onChange(e)}\n                />\n                <small className=\"form-text\"\n                    >If you want your latest repos and a Github link, include your\n                    username</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={(e) => onChange(e)}></textarea>\n                <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n\n                <div className=\"my-2\">\n                <button onClick={(e) => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n                    Add Social Network Links\n                </button>\n                <span>Optional</span>\n                </div>\n\n\n                {/* if toggle is true, show all social inputs else hide them */}\n                {displaySocialInputs && <Fragment>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-twitter fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={(e) => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-facebook fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={(e) => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-youtube fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={(e) => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-linkedin fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={(e) => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-instagram fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={(e) => onChange(e)} />\n                    </div>\n\n                </Fragment>}\n\n                \n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link to=\"/dashboard\" className=\"btn btn-light my-1\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n\nCreateProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n}\n\n{/* for using history, we wrap the component with withRouter */}\nexport default connect(null, { createProfile })(withRouter(CreateProfile));","/home/raj/Desktop/ConnectApp/client/src/components/dashboard/DashboardActions.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/profile-form/EditProfile.js",["154"],"/home/raj/Desktop/ConnectApp/client/src/components/profile-form/AddExperience.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/profile-form/AddEducation.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/dashboard/Experience.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/dashboard/Education.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/profiles/Profiles.js",["155"],"import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Spinner from '../layout/Spinner';\n\nimport ProfileItem from './ProfileItem';\n\nimport { getAllProfiles  } from '../../actions/profile';\n\nconst Profiles = ({ getAllProfiles, profile: { profiles, loading } }) => {\n\n\n    useEffect(() => {\n        getAllProfiles();\n    },[])\n\n\n    return (\n        <Fragment>\n            { loading ? <Spinner /> : <Fragment>\n                <h1 className=\"large text-primary\">Developers</h1>\n                <p className=\"lead\">\n                    <i className=\"fab fa-connectdevelop\"></i> Connect with developers\n                </p>\n                <div className=\"profiles\">\n                    { profiles.length > 0 ? (\n\n                        profiles.map((profile) => ( <ProfileItem key={profile._id} profile={profile} /> ))\n\n                    ) : <h4>No profiles found!</h4> }\n                </div>\n\n            </Fragment>}\n        </Fragment>\n    )\n}\n\nProfiles.propTypes = {\n    getAllProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, { getAllProfiles })(Profiles);\n","/home/raj/Desktop/ConnectApp/client/src/components/profiles/ProfileItem.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/profile/Profile.js",["156"],"/home/raj/Desktop/ConnectApp/client/src/components/profile/ProfileTop.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/profile/ProfileAbout.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/profile/ProfileExperience.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/profile/ProfileEducation.js",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":36,"column":7,"nodeType":"163","endLine":36,"endColumn":9,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":5,"column":1,"nodeType":"167","endLine":14,"endColumn":2},{"ruleId":"165","severity":1,"message":"166","line":10,"column":1,"nodeType":"167","endLine":38,"endColumn":2},{"ruleId":"161","severity":1,"message":"162","line":18,"column":7,"nodeType":"163","endLine":18,"endColumn":9,"suggestions":"168"},{"ruleId":"165","severity":1,"message":"166","line":12,"column":1,"nodeType":"167","endLine":29,"endColumn":2},{"ruleId":"169","severity":1,"message":"170","line":178,"column":1,"nodeType":"171","messageId":"172","endLine":178,"endColumn":65},{"ruleId":"161","severity":1,"message":"173","line":52,"column":7,"nodeType":"163","endLine":52,"endColumn":16,"suggestions":"174"},{"ruleId":"161","severity":1,"message":"175","line":16,"column":7,"nodeType":"163","endLine":16,"endColumn":9,"suggestions":"176"},{"ruleId":"161","severity":1,"message":"177","line":23,"column":7,"nodeType":"163","endLine":23,"endColumn":9,"suggestions":"178"},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["181"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["182"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["183"],"React Hook useEffect has a missing dependency: 'getAllProfiles'. Either include it or remove the dependency array. If 'getAllProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["184"],"React Hook useEffect has missing dependencies: 'getProfileById' and 'match.params.id'. Either include them or remove the dependency array. If 'getProfileById' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["185"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"186","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [props]",{"range":"195","text":"196"},{"range":"197","text":"196"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"198","text":"199"},"Update the dependencies array to be: [getAllProfiles]",{"range":"200","text":"201"},"Update the dependencies array to be: [getProfileById, match.params.id]",{"range":"202","text":"203"},[1170,1172],"[props]",[507,509],[1810,1819],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",[401,403],"[getAllProfiles]",[615,617],"[getProfileById, match.params.id]"]