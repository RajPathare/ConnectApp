[{"/home/raj/Desktop/ConnectApp/client/src/index.js":"1","/home/raj/Desktop/ConnectApp/client/src/App.js":"2","/home/raj/Desktop/ConnectApp/client/src/components/layout/Navbar.js":"3","/home/raj/Desktop/ConnectApp/client/src/components/layout/Landing.js":"4","/home/raj/Desktop/ConnectApp/client/src/components/auth/Login.js":"5","/home/raj/Desktop/ConnectApp/client/src/components/auth/Register.js":"6","/home/raj/Desktop/ConnectApp/client/src/store.js":"7","/home/raj/Desktop/ConnectApp/client/src/reducers/index.js":"8","/home/raj/Desktop/ConnectApp/client/src/reducers/alertReducer.js":"9","/home/raj/Desktop/ConnectApp/client/src/actions/types.js":"10","/home/raj/Desktop/ConnectApp/client/src/actions/alert.js":"11","/home/raj/Desktop/ConnectApp/client/src/components/layout/Alert.js":"12","/home/raj/Desktop/ConnectApp/client/src/actions/auth.js":"13","/home/raj/Desktop/ConnectApp/client/src/reducers/auth.js":"14","/home/raj/Desktop/ConnectApp/client/src/utils/setAuthToken.js":"15","/home/raj/Desktop/ConnectApp/client/src/components/dashboard/Dashboard.js":"16","/home/raj/Desktop/ConnectApp/client/src/components/routing/PrivateRoute.js":"17","/home/raj/Desktop/ConnectApp/client/src/reducers/profile.js":"18","/home/raj/Desktop/ConnectApp/client/src/actions/profile.js":"19","/home/raj/Desktop/ConnectApp/client/src/components/layout/Spinner.js":"20","/home/raj/Desktop/ConnectApp/client/src/components/profile-form/CreateProfile.js":"21","/home/raj/Desktop/ConnectApp/client/src/components/dashboard/DashboardActions.js":"22","/home/raj/Desktop/ConnectApp/client/src/components/profile-form/EditProfile.js":"23","/home/raj/Desktop/ConnectApp/client/src/components/profile-form/AddExperience.js":"24","/home/raj/Desktop/ConnectApp/client/src/components/profile-form/AddEducation.js":"25","/home/raj/Desktop/ConnectApp/client/src/components/dashboard/Experience.js":"26","/home/raj/Desktop/ConnectApp/client/src/components/dashboard/Education.js":"27"},{"size":272,"mtime":1610378048940,"results":"28","hashOfConfig":"29"},{"size":2132,"mtime":1612255066383,"results":"30","hashOfConfig":"29"},{"size":1594,"mtime":1612163291887,"results":"31","hashOfConfig":"29"},{"size":1157,"mtime":1612163669174,"results":"32","hashOfConfig":"29"},{"size":2026,"mtime":1610448136993,"results":"33","hashOfConfig":"29"},{"size":2928,"mtime":1610448304766,"results":"34","hashOfConfig":"29"},{"size":375,"mtime":1610377900481,"results":"35","hashOfConfig":"29"},{"size":244,"mtime":1610470671511,"results":"36","hashOfConfig":"29"},{"size":382,"mtime":1610378669666,"results":"37","hashOfConfig":"29"},{"size":614,"mtime":1612257094139,"results":"38","hashOfConfig":"29"},{"size":458,"mtime":1610384267848,"results":"39","hashOfConfig":"29"},{"size":646,"mtime":1610384048645,"results":"40","hashOfConfig":"29"},{"size":2771,"mtime":1612165396371,"results":"41","hashOfConfig":"29"},{"size":1668,"mtime":1612257219886,"results":"42","hashOfConfig":"29"},{"size":258,"mtime":1610445615924,"results":"43","hashOfConfig":"29"},{"size":1952,"mtime":1612257780556,"results":"44","hashOfConfig":"29"},{"size":575,"mtime":1610470370924,"results":"45","hashOfConfig":"29"},{"size":913,"mtime":1612257170636,"results":"46","hashOfConfig":"29"},{"size":5410,"mtime":1612257135533,"results":"47","hashOfConfig":"29"},{"size":267,"mtime":1612164024447,"results":"48","hashOfConfig":"29"},{"size":6943,"mtime":1612174852449,"results":"49","hashOfConfig":"29"},{"size":611,"mtime":1612175279338,"results":"50","hashOfConfig":"29"},{"size":8220,"mtime":1612258342993,"results":"51","hashOfConfig":"29"},{"size":3442,"mtime":1612258441398,"results":"52","hashOfConfig":"29"},{"size":3403,"mtime":1612258417875,"results":"53","hashOfConfig":"29"},{"size":1612,"mtime":1612257350809,"results":"54","hashOfConfig":"29"},{"size":1599,"mtime":1612257476057,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"v56vz8",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/raj/Desktop/ConnectApp/client/src/index.js",[],["114","115"],"/home/raj/Desktop/ConnectApp/client/src/App.js",["116"],"import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Dashboard from './components/dashboard/Dashboard';\n\nimport PrivateRoute from './components/routing/PrivateRoute';\n\nimport Alert from './components/layout/Alert';\n\nimport CreateProfile from './components/profile-form/CreateProfile';\nimport EditProfile from './components/profile-form/EditProfile';\n\nimport AddExperience from './components/profile-form/AddExperience';\nimport AddEducation from './components/profile-form/AddEducation';\n\nimport setAuthToken from './utils/setAuthToken';\nimport { loadUser } from './actions/auth';\n\nif(localStorage.token) {\n    setAuthToken(localStorage.token);\n}\n\nconst App = (props) => {\n\n    useEffect(()=> {\n        props.loadUser()\n    },[])\n// [] => run only once (componentDidMount)\n\n    return (\n        <Router>\n            <Fragment>\n                <Navbar />\n                <Route exact path='/' component={Landing} />\n                <section className=\"container\">\n                    <Alert />\n                    <Switch>\n                        <Route exact path='/login' component={Login} />\n                        <Route exact path='/register' component={Register} />\n                        <PrivateRoute exact path='/dashboard' component={Dashboard} />\n                        <PrivateRoute exact path='/create-profile' component={CreateProfile} />\n                        <PrivateRoute exact path='/edit-profile' component={EditProfile} />\n                        <PrivateRoute exact path='/add-experience' component={AddExperience} />\n                        <PrivateRoute exact path='/add-education' component={AddEducation} />\n                    </Switch>\n                </section>\n            </Fragment>\n        </Router>\n    )\n\n}\n\nexport default connect(null,{\n    loadUser\n})(App);","/home/raj/Desktop/ConnectApp/client/src/components/layout/Navbar.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/layout/Landing.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/auth/Login.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/auth/Register.js",[],"/home/raj/Desktop/ConnectApp/client/src/store.js",[],"/home/raj/Desktop/ConnectApp/client/src/reducers/index.js",[],"/home/raj/Desktop/ConnectApp/client/src/reducers/alertReducer.js",["117"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n    switch(action.type){\n        case SET_ALERT:\n            return [...state, action.payload];\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== action.payload);\n        default:\n            return state;\n    }\n}","/home/raj/Desktop/ConnectApp/client/src/actions/types.js",[],"/home/raj/Desktop/ConnectApp/client/src/actions/alert.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/layout/Alert.js",[],"/home/raj/Desktop/ConnectApp/client/src/actions/auth.js",[],"/home/raj/Desktop/ConnectApp/client/src/reducers/auth.js",["118"],"/home/raj/Desktop/ConnectApp/client/src/utils/setAuthToken.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/dashboard/Dashboard.js",["119"],"/home/raj/Desktop/ConnectApp/client/src/components/routing/PrivateRoute.js",[],"/home/raj/Desktop/ConnectApp/client/src/reducers/profile.js",["120","121"],"/home/raj/Desktop/ConnectApp/client/src/actions/profile.js",["122"],"/home/raj/Desktop/ConnectApp/client/src/components/layout/Spinner.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/profile-form/CreateProfile.js",["123"],"import React, { useState, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile } from '../../actions/profile';\n\nconst CreateProfile = (props) => {\n\n\n    const [formData, setFormData] = useState({\n\n        company: '',\n        website: '',\n        location: '',\n        status: '',\n        skills: '',\n        githubusername: '',\n        bio: '',\n        twitter: '',\n        facebook: '',\n        linkedin: '',\n        youtube: '',\n        instagram: ''\n\n    });\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n    const {\n\n        company,\n        website,\n        location,\n        status,\n        skills,\n        githubusername,\n        bio,\n        twitter,\n        facebook,\n        linkedin,\n        youtube,\n        instagram\n\n    } = formData;\n\n\n    const onChange = (e) => {\n        setFormData({\n            ...formData, [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        props.createProfile(formData, props.history);\n    }\n\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                Create Your Profile\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\n                profile stand out\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={(e)=> onSubmit(e)}>\n                <div className=\"form-group\">\n                <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\n                    <option value=\"0\">* Select Professional Status</option>\n                    <option value=\"Developer\">Developer</option>\n                    <option value=\"Junior Developer\">Junior Developer</option>\n                    <option value=\"Senior Developer\">Senior Developer</option>\n                    <option value=\"Manager\">Manager</option>\n                    <option value=\"Student or Learning\">Student or Learning</option>\n                    <option value=\"Instructor\">Instructor or Teacher</option>\n                    <option value=\"Intern\">Intern</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <small className=\"form-text\"\n                    >Give us an idea of where you are at in your career</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={(e) => onChange(e)} />\n                <small className=\"form-text\"\n                    >Could be your own company or one you work for</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={(e) => onChange(e)} />\n                <small className=\"form-text\"\n                    >Could be your own or a company website</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={(e) => onChange(e)} />\n                <small className=\"form-text\"\n                    >City & state suggested (eg. Boston, MA)</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={(e) => onChange(e)} />\n                <small className=\"form-text\"\n                    >Please use comma separated values (eg.\n                    HTML,CSS,JavaScript,PHP)</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Github Username\"\n                    name=\"githubusername\"\n                    value={githubusername} onChange={(e) => onChange(e)}\n                />\n                <small className=\"form-text\"\n                    >If you want your latest repos and a Github link, include your\n                    username</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={(e) => onChange(e)}></textarea>\n                <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n\n                <div className=\"my-2\">\n                <button onClick={(e) => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n                    Add Social Network Links\n                </button>\n                <span>Optional</span>\n                </div>\n\n\n                {/* if toggle is true, show all social inputs else hide them */}\n                {displaySocialInputs && <Fragment>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-twitter fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={(e) => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-facebook fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={(e) => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-youtube fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={(e) => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-linkedin fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={(e) => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-instagram fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={(e) => onChange(e)} />\n                    </div>\n\n                </Fragment>}\n\n                \n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link to=\"/dashboard\" className=\"btn btn-light my-1\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n\nCreateProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n}\n\n{/* for using history, we wrap the component with withRouter */}\nexport default connect(null, { createProfile })(withRouter(CreateProfile));","/home/raj/Desktop/ConnectApp/client/src/components/dashboard/DashboardActions.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/profile-form/EditProfile.js",["124"],"/home/raj/Desktop/ConnectApp/client/src/components/profile-form/AddExperience.js",["125"],"/home/raj/Desktop/ConnectApp/client/src/components/profile-form/AddEducation.js",["126"],"/home/raj/Desktop/ConnectApp/client/src/components/dashboard/Experience.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/dashboard/Education.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":32,"column":7,"nodeType":"133","endLine":32,"endColumn":9,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":5,"column":1,"nodeType":"137","endLine":14,"endColumn":2},{"ruleId":"135","severity":1,"message":"136","line":10,"column":1,"nodeType":"137","endLine":38,"endColumn":2},{"ruleId":"131","severity":1,"message":"132","line":18,"column":7,"nodeType":"133","endLine":18,"endColumn":9,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":2,"column":69,"nodeType":"141","messageId":"142","endLine":2,"endColumn":84},{"ruleId":"135","severity":1,"message":"136","line":12,"column":1,"nodeType":"137","endLine":25,"endColumn":2},{"ruleId":"139","severity":1,"message":"143","line":197,"column":23,"nodeType":"141","messageId":"142","endLine":197,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":178,"column":1,"nodeType":"146","messageId":"147","endLine":178,"endColumn":65},{"ruleId":"131","severity":1,"message":"148","line":52,"column":7,"nodeType":"133","endLine":52,"endColumn":16,"suggestions":"149"},{"ruleId":"139","severity":1,"message":"150","line":2,"column":16,"nodeType":"141","messageId":"142","endLine":2,"endColumn":26},{"ruleId":"139","severity":1,"message":"150","line":2,"column":16,"nodeType":"141","messageId":"142","endLine":2,"endColumn":26},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["153"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["154"],"no-unused-vars","'ACCOUNT_DELETED' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["155"],"'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"156","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [props]",{"range":"161","text":"162"},{"range":"163","text":"162"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"164","text":"165"},[1061,1063],"[props]",[507,509],[1810,1819],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]