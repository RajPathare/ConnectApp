[{"/home/raj/Desktop/ConnectApp/client/src/index.js":"1","/home/raj/Desktop/ConnectApp/client/src/App.js":"2","/home/raj/Desktop/ConnectApp/client/src/components/layout/Navbar.js":"3","/home/raj/Desktop/ConnectApp/client/src/components/layout/Landing.js":"4","/home/raj/Desktop/ConnectApp/client/src/components/auth/Login.js":"5","/home/raj/Desktop/ConnectApp/client/src/components/auth/Register.js":"6","/home/raj/Desktop/ConnectApp/client/src/store.js":"7","/home/raj/Desktop/ConnectApp/client/src/reducers/index.js":"8","/home/raj/Desktop/ConnectApp/client/src/reducers/alertReducer.js":"9","/home/raj/Desktop/ConnectApp/client/src/actions/types.js":"10","/home/raj/Desktop/ConnectApp/client/src/actions/alert.js":"11","/home/raj/Desktop/ConnectApp/client/src/components/layout/Alert.js":"12","/home/raj/Desktop/ConnectApp/client/src/actions/auth.js":"13","/home/raj/Desktop/ConnectApp/client/src/reducers/auth.js":"14","/home/raj/Desktop/ConnectApp/client/src/utils/setAuthToken.js":"15","/home/raj/Desktop/ConnectApp/client/src/components/dashboard/Dashboard.js":"16","/home/raj/Desktop/ConnectApp/client/src/components/routing/PrivateRoute.js":"17","/home/raj/Desktop/ConnectApp/client/src/reducers/profile.js":"18","/home/raj/Desktop/ConnectApp/client/src/actions/profile.js":"19","/home/raj/Desktop/ConnectApp/client/src/components/layout/Spinner.js":"20","/home/raj/Desktop/ConnectApp/client/src/components/profile-form/CreateProfile.js":"21","/home/raj/Desktop/ConnectApp/client/src/components/dashboard/DashboardActions.js":"22","/home/raj/Desktop/ConnectApp/client/src/components/profile-form/EditProfile.js":"23","/home/raj/Desktop/ConnectApp/client/src/components/profile-form/AddExperience.js":"24","/home/raj/Desktop/ConnectApp/client/src/components/profile-form/AddEducation.js":"25","/home/raj/Desktop/ConnectApp/client/src/components/dashboard/Experience.js":"26","/home/raj/Desktop/ConnectApp/client/src/components/dashboard/Education.js":"27","/home/raj/Desktop/ConnectApp/client/src/components/profiles/Profiles.js":"28","/home/raj/Desktop/ConnectApp/client/src/components/profiles/ProfileItem.js":"29"},{"size":272,"mtime":1610378048940,"results":"30","hashOfConfig":"31"},{"size":2266,"mtime":1612340206526,"results":"32","hashOfConfig":"31"},{"size":1654,"mtime":1612340388444,"results":"33","hashOfConfig":"31"},{"size":1157,"mtime":1612163669174,"results":"34","hashOfConfig":"31"},{"size":2026,"mtime":1610448136993,"results":"35","hashOfConfig":"31"},{"size":2928,"mtime":1610448304766,"results":"36","hashOfConfig":"31"},{"size":375,"mtime":1610377900481,"results":"37","hashOfConfig":"31"},{"size":244,"mtime":1610470671511,"results":"38","hashOfConfig":"31"},{"size":382,"mtime":1610378669666,"results":"39","hashOfConfig":"31"},{"size":697,"mtime":1612339590143,"results":"40","hashOfConfig":"31"},{"size":458,"mtime":1610384267848,"results":"41","hashOfConfig":"31"},{"size":646,"mtime":1610384048645,"results":"42","hashOfConfig":"31"},{"size":2771,"mtime":1612165396371,"results":"43","hashOfConfig":"31"},{"size":1668,"mtime":1612257219886,"results":"44","hashOfConfig":"31"},{"size":258,"mtime":1610445615924,"results":"45","hashOfConfig":"31"},{"size":1952,"mtime":1612260901336,"results":"46","hashOfConfig":"31"},{"size":575,"mtime":1610470370924,"results":"47","hashOfConfig":"31"},{"size":1114,"mtime":1612339710113,"results":"48","hashOfConfig":"31"},{"size":7040,"mtime":1612339634910,"results":"49","hashOfConfig":"31"},{"size":294,"mtime":1612340645438,"results":"50","hashOfConfig":"31"},{"size":6943,"mtime":1612174852449,"results":"51","hashOfConfig":"31"},{"size":611,"mtime":1612175279338,"results":"52","hashOfConfig":"31"},{"size":8220,"mtime":1612258342993,"results":"53","hashOfConfig":"31"},{"size":3442,"mtime":1612258441398,"results":"54","hashOfConfig":"31"},{"size":3403,"mtime":1612258417875,"results":"55","hashOfConfig":"31"},{"size":1612,"mtime":1612257350809,"results":"56","hashOfConfig":"31"},{"size":1599,"mtime":1612257476057,"results":"57","hashOfConfig":"31"},{"size":1283,"mtime":1612341140973,"results":"58","hashOfConfig":"31"},{"size":1306,"mtime":1612342127602,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"v56vz8",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/raj/Desktop/ConnectApp/client/src/index.js",[],["125","126"],"/home/raj/Desktop/ConnectApp/client/src/App.js",["127"],"/home/raj/Desktop/ConnectApp/client/src/components/layout/Navbar.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/layout/Landing.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/auth/Login.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/auth/Register.js",[],"/home/raj/Desktop/ConnectApp/client/src/store.js",[],"/home/raj/Desktop/ConnectApp/client/src/reducers/index.js",[],"/home/raj/Desktop/ConnectApp/client/src/reducers/alertReducer.js",["128"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n    switch(action.type){\n        case SET_ALERT:\n            return [...state, action.payload];\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== action.payload);\n        default:\n            return state;\n    }\n}","/home/raj/Desktop/ConnectApp/client/src/actions/types.js",[],"/home/raj/Desktop/ConnectApp/client/src/actions/alert.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/layout/Alert.js",[],"/home/raj/Desktop/ConnectApp/client/src/actions/auth.js",[],"/home/raj/Desktop/ConnectApp/client/src/reducers/auth.js",["129"],"import { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, ACCOUNT_DELETED } from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n};\n\nexport default (state = initialState, action) => {\n    switch(action.type){\n        case REGISTER_SUCCESS:\n            localStorage.setItem('token', action.payload.token);\n            return {...state, ...action.payload, isAuthenticated: true, loading: false};\n        case REGISTER_FAIL:\n            localStorage.removeItem('token');\n            return {...state, token: null, isAuthenticated: false, loading: false};\n        case USER_LOADED:\n            return {...state, isAuthenticated: true, loading: false, user: action.payload}\n        case AUTH_ERROR: \n            localStorage.removeItem('token');\n            return {...state, token: null, isAuthenticated: false, loading: false};\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', action.payload.token);\n            return {...state, ...action.payload, isAuthenticated: true, loading: false};\n        case LOGIN_FAIL:\n            localStorage.removeItem('token');\n            return {...state, token: null, isAuthenticated: false, loading: false};\n        case LOGOUT:\n            localStorage.removeItem('token');\n            return {...state, token: null, isAuthenticated: false, loading: false};\n        case ACCOUNT_DELETED:\n            localStorage.removeItem('token');\n            return {...state, token: null, isAuthenticated: false, loading: false};\n        default:\n            return state;\n    }\n}\n\n","/home/raj/Desktop/ConnectApp/client/src/utils/setAuthToken.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/dashboard/Dashboard.js",["130"],"/home/raj/Desktop/ConnectApp/client/src/components/routing/PrivateRoute.js",[],"/home/raj/Desktop/ConnectApp/client/src/reducers/profile.js",["131"],"/home/raj/Desktop/ConnectApp/client/src/actions/profile.js",["132"],"/home/raj/Desktop/ConnectApp/client/src/components/layout/Spinner.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/profile-form/CreateProfile.js",["133"],"import React, { useState, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile } from '../../actions/profile';\n\nconst CreateProfile = (props) => {\n\n\n    const [formData, setFormData] = useState({\n\n        company: '',\n        website: '',\n        location: '',\n        status: '',\n        skills: '',\n        githubusername: '',\n        bio: '',\n        twitter: '',\n        facebook: '',\n        linkedin: '',\n        youtube: '',\n        instagram: ''\n\n    });\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n    const {\n\n        company,\n        website,\n        location,\n        status,\n        skills,\n        githubusername,\n        bio,\n        twitter,\n        facebook,\n        linkedin,\n        youtube,\n        instagram\n\n    } = formData;\n\n\n    const onChange = (e) => {\n        setFormData({\n            ...formData, [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        props.createProfile(formData, props.history);\n    }\n\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                Create Your Profile\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\n                profile stand out\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={(e)=> onSubmit(e)}>\n                <div className=\"form-group\">\n                <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\n                    <option value=\"0\">* Select Professional Status</option>\n                    <option value=\"Developer\">Developer</option>\n                    <option value=\"Junior Developer\">Junior Developer</option>\n                    <option value=\"Senior Developer\">Senior Developer</option>\n                    <option value=\"Manager\">Manager</option>\n                    <option value=\"Student or Learning\">Student or Learning</option>\n                    <option value=\"Instructor\">Instructor or Teacher</option>\n                    <option value=\"Intern\">Intern</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <small className=\"form-text\"\n                    >Give us an idea of where you are at in your career</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={(e) => onChange(e)} />\n                <small className=\"form-text\"\n                    >Could be your own company or one you work for</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={(e) => onChange(e)} />\n                <small className=\"form-text\"\n                    >Could be your own or a company website</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={(e) => onChange(e)} />\n                <small className=\"form-text\"\n                    >City & state suggested (eg. Boston, MA)</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={(e) => onChange(e)} />\n                <small className=\"form-text\"\n                    >Please use comma separated values (eg.\n                    HTML,CSS,JavaScript,PHP)</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Github Username\"\n                    name=\"githubusername\"\n                    value={githubusername} onChange={(e) => onChange(e)}\n                />\n                <small className=\"form-text\"\n                    >If you want your latest repos and a Github link, include your\n                    username</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={(e) => onChange(e)}></textarea>\n                <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n\n                <div className=\"my-2\">\n                <button onClick={(e) => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n                    Add Social Network Links\n                </button>\n                <span>Optional</span>\n                </div>\n\n\n                {/* if toggle is true, show all social inputs else hide them */}\n                {displaySocialInputs && <Fragment>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-twitter fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={(e) => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-facebook fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={(e) => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-youtube fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={(e) => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-linkedin fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={(e) => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-instagram fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={(e) => onChange(e)} />\n                    </div>\n\n                </Fragment>}\n\n                \n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link to=\"/dashboard\" className=\"btn btn-light my-1\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n\nCreateProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n}\n\n{/* for using history, we wrap the component with withRouter */}\nexport default connect(null, { createProfile })(withRouter(CreateProfile));","/home/raj/Desktop/ConnectApp/client/src/components/dashboard/DashboardActions.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/profile-form/EditProfile.js",["134"],"import React, { useState, Fragment, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({ \n    profile: { profile, loading },\n    createProfile,\n    getCurrentProfile,\n    history\n }) => {\n\n\n    const [formData, setFormData] = useState({\n\n        company: '',\n        website: '',\n        location: '',\n        status: '',\n        skills: '',\n        githubusername: '',\n        bio: '',\n        twitter: '',\n        facebook: '',\n        linkedin: '',\n        youtube: '',\n        instagram: ''\n\n    });\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n    useEffect(() => {\n        getCurrentProfile();\n\n        setFormData({\n            company: loading || !profile.company ? '' :  profile.company,\n            website: loading || !profile.website ? '' :  profile.website,\n            location: loading || !profile.location ? '' :  profile.location,\n            status: loading || !profile.status ? '' :  profile.status,\n            skills: loading || !profile.skills ? '' :  profile.skills.join(','),\n            githubusername: loading || !profile.githubusername ? '' :  profile.githubusername,\n            bio: loading || !profile.bio ? '' :  profile.bio,\n            twitter: loading || !profile.social ? '' :  profile.social.twitter,\n            facebook: loading || !profile.social ? '' :  profile.social.facebook,\n            linkedin: loading || !profile.social ? '' :  profile.social.linkedin,\n            youtube: loading || !profile.social ? '' :  profile.social.youtube,\n            instagram: loading || !profile.social ? '' :  profile.social.instagram,\n        })\n\n    },[loading]);\n\n    const {\n\n        company,\n        website,\n        location,\n        status,\n        skills,\n        githubusername,\n        bio,\n        twitter,\n        facebook,\n        linkedin,\n        youtube,\n        instagram\n\n    } = formData;\n\n\n    const onChange = (e) => {\n        setFormData({\n            ...formData, [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        createProfile(formData, history, true);\n    }\n\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                Edit Your Profile\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\n                profile stand out\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={(e)=> onSubmit(e)}>\n                <div className=\"form-group\">\n                <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\n                    <option value=\"0\">* Select Professional Status</option>\n                    <option value=\"Developer\">Developer</option>\n                    <option value=\"Junior Developer\">Junior Developer</option>\n                    <option value=\"Senior Developer\">Senior Developer</option>\n                    <option value=\"Manager\">Manager</option>\n                    <option value=\"Student or Learning\">Student or Learning</option>\n                    <option value=\"Instructor\">Instructor or Teacher</option>\n                    <option value=\"Intern\">Intern</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <small className=\"form-text\"\n                    >Give us an idea of where you are at in your career</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={(e) => onChange(e)} />\n                <small className=\"form-text\"\n                    >Could be your own company or one you work for</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={(e) => onChange(e)} />\n                <small className=\"form-text\"\n                    >Could be your own or a company website</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={(e) => onChange(e)} />\n                <small className=\"form-text\"\n                    >City & state suggested (eg. Boston, MA)</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={(e) => onChange(e)} />\n                <small className=\"form-text\"\n                    >Please use comma separated values (eg.\n                    HTML,CSS,JavaScript,PHP)</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Github Username\"\n                    name=\"githubusername\"\n                    value={githubusername} onChange={(e) => onChange(e)}\n                />\n                <small className=\"form-text\"\n                    >If you want your latest repos and a Github link, include your\n                    username</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={(e) => onChange(e)}></textarea>\n                <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n\n                <div className=\"my-2\">\n                <button onClick={(e) => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n                    Add Social Network Links\n                </button>\n                <span>Optional</span>\n                </div>\n\n\n                {/* if toggle is true, show all social inputs else hide them */}\n                {displaySocialInputs && <Fragment>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-twitter fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={(e) => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-facebook fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={(e) => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-youtube fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={(e) => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-linkedin fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={(e) => onChange(e)} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                    <i className=\"fab fa-instagram fa-2x\"></i>\n                    <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={(e) => onChange(e)} />\n                    </div>\n\n                </Fragment>}\n\n                \n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link to=\"/dashboard\" className=\"btn btn-light my-1\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(withRouter(EditProfile));","/home/raj/Desktop/ConnectApp/client/src/components/profile-form/AddExperience.js",["135"],"import React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addExperience  } from '../../actions/profile';\n\nconst AddExperience = ({ addExperience, history }) => {\n\n\n    const [formData, setFormData] = useState({\n\n        company: '',\n        title: '',\n        location: '',\n        from: '',\n        to: '',\n        current: false,\n        description: ''\n\n    });\n\n    // disable \"to\" when the user clicks on current\n    const [toDateDisabled, toggleDisabled] = useState(false);\n\n    const { company, title, location, from, to, current, description } = formData;\n\n    const onChange = (e) => {\n\n        setFormData({\n            ...formData, [e.target.name]: e.target.value\n        })\n\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        addExperience(formData, history);\n    }\n\n    return (\n        <Fragment>\n            <h1 class=\"large text-primary\">\n            Add An Experience\n            </h1>\n            <p class=\"lead\">\n                <i class=\"fas fa-code-branch\"></i> Add any developer/programming\n                positions that you have had in the past\n            </p>\n            <small>* = required field</small>\n            <form class=\"form\" onSubmit={(e) =>  onSubmit(e)} > \n                <div class=\"form-group\">\n                <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" required value={title} onChange={(e) => onChange(e)} />\n                </div>\n                <div class=\"form-group\">\n                <input type=\"text\" placeholder=\"* Company\" name=\"company\" required value={company} onChange={(e) => onChange(e)} />\n                </div>\n                <div class=\"form-group\">\n                <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={(e) => onChange(e)} />\n                </div>\n                <div class=\"form-group\">\n                <h4>From Date</h4>\n                <input type=\"date\" name=\"from\" value={from} onChange={(e) => onChange(e)} />\n                </div>\n                <div class=\"form-group\">\n                    {/* for toggling current, everytime you click on the checkbox, we toggle the state of current using setFormData */}\n                <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={(e) => { setFormData({ ...formData, current: !current }); toggleDisabled(!toDateDisabled) }} /> {' '}Current Job</p>\n                </div>\n                <div class=\"form-group\">\n                <h4>To Date</h4>\n                <input type=\"date\" name=\"to\" value={to} onChange={(e) => onChange(e)} disabled={ toDateDisabled ? 'disabled': '' } />\n                </div>\n                <div class=\"form-group\">\n                <textarea\n                    name=\"description\"\n                    cols=\"30\"\n                    rows=\"5\"\n                    placeholder=\"Job Description\"\n                    value={description} onChange={(e) => onChange(e)}\n                ></textarea>\n                </div>\n                <input type=\"submit\" class=\"btn btn-primary my-1\" />\n                <Link to=\"/dashboard\" class=\"btn btn-light my-1\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n\nAddExperience.propTypes = {\n    addExperience: PropTypes.func.isRequired\n}\n\nexport default connect(null, { addExperience })(AddExperience)\n","/home/raj/Desktop/ConnectApp/client/src/components/profile-form/AddEducation.js",["136"],"import React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addEducation } from '../../actions/profile';\n\nconst AddEducation = ({ addEducation, history }) => {\n\n\n    const [formData, setFormData] = useState({\n\n        school: '',\n        degree: '',\n        fieldofstudy: '',\n        from: '',\n        to: '',\n        current: false,\n        description: ''\n\n    });\n\n    // disable \"to\" when the user clicks on current\n    const [toDateDisabled, toggleDisabled] = useState(false);\n\n    const { school, degree, fieldofstudy, from, to, current, description } = formData;\n\n    const onChange = (e) => {\n\n        setFormData({\n            ...formData, [e.target.name]: e.target.value\n        })\n\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        addEducation(formData, history);\n    }\n\n    return (\n        <Fragment>\n            <h1 class=\"large text-primary\">\n            Add an education\n            </h1>\n            <p class=\"lead\">\n                <i class=\"fas fa-code-branch\"></i> Add any school, bootcamp you attended\n            </p>\n            <small>* = required field</small>\n            <form class=\"form\" onSubmit={(e) =>  onSubmit(e)} > \n                <div class=\"form-group\">\n                <input type=\"text\" placeholder=\"* School\" name=\"school\" required value={school} onChange={(e) => onChange(e)} />\n                </div>\n                <div class=\"form-group\">\n                <input type=\"text\" placeholder=\"* Degree\" name=\"degree\" required value={degree} onChange={(e) => onChange(e)} />\n                </div>\n                <div class=\"form-group\">\n                <input type=\"text\" placeholder=\"Field of study\" name=\"fieldofstudy\" value={fieldofstudy} onChange={(e) => onChange(e)} />\n                </div>\n                <div class=\"form-group\">\n                <h4>From Date</h4>\n                <input type=\"date\" name=\"from\" value={from} onChange={(e) => onChange(e)} />\n                </div>\n                <div class=\"form-group\">\n                    {/* for toggling current, everytime you click on the checkbox, we toggle the state of current using setFormData */}\n                <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={(e) => { setFormData({ ...formData, current: !current }); toggleDisabled(!toDateDisabled) }} /> {' '}Current</p>\n                </div>\n                <div class=\"form-group\">\n                <h4>To Date</h4>\n                <input type=\"date\" name=\"to\" value={to} onChange={(e) => onChange(e)} disabled={ toDateDisabled ? 'disabled': '' } />\n                </div>\n                <div class=\"form-group\">\n                <textarea\n                    name=\"description\"\n                    cols=\"30\"\n                    rows=\"5\"\n                    placeholder=\"Program Description\"\n                    value={description} onChange={(e) => onChange(e)}\n                ></textarea>\n                </div>\n                <input type=\"submit\" class=\"btn btn-primary my-1\" />\n                <Link to=\"/dashboard\" class=\"btn btn-light my-1\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n \nAddEducation.propTypes = {\n    addEducation: PropTypes.func.isRequired\n}\n\nexport default connect(null, { addEducation })(AddEducation)\n","/home/raj/Desktop/ConnectApp/client/src/components/dashboard/Experience.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/dashboard/Education.js",[],"/home/raj/Desktop/ConnectApp/client/src/components/profiles/Profiles.js",["137"],"/home/raj/Desktop/ConnectApp/client/src/components/profiles/ProfileItem.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":34,"column":7,"nodeType":"144","endLine":34,"endColumn":9,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":5,"column":1,"nodeType":"148","endLine":14,"endColumn":2},{"ruleId":"146","severity":1,"message":"147","line":10,"column":1,"nodeType":"148","endLine":38,"endColumn":2},{"ruleId":"142","severity":1,"message":"143","line":18,"column":7,"nodeType":"144","endLine":18,"endColumn":9,"suggestions":"149"},{"ruleId":"146","severity":1,"message":"147","line":12,"column":1,"nodeType":"148","endLine":29,"endColumn":2},{"ruleId":"150","severity":1,"message":"151","line":255,"column":23,"nodeType":"152","messageId":"153","endLine":255,"endColumn":26},{"ruleId":"154","severity":1,"message":"155","line":178,"column":1,"nodeType":"156","messageId":"157","endLine":178,"endColumn":65},{"ruleId":"142","severity":1,"message":"158","line":52,"column":7,"nodeType":"144","endLine":52,"endColumn":16,"suggestions":"159"},{"ruleId":"150","severity":1,"message":"160","line":2,"column":16,"nodeType":"152","messageId":"153","endLine":2,"endColumn":26},{"ruleId":"150","severity":1,"message":"160","line":2,"column":16,"nodeType":"152","messageId":"153","endLine":2,"endColumn":26},{"ruleId":"142","severity":1,"message":"161","line":16,"column":7,"nodeType":"144","endLine":16,"endColumn":9,"suggestions":"162"},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["165"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["166"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["167"],"'withRouter' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllProfiles'. Either include it or remove the dependency array. If 'getAllProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["168"],"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"169","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [props]",{"range":"176","text":"177"},{"range":"178","text":"177"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"179","text":"180"},"Update the dependencies array to be: [getAllProfiles]",{"range":"181","text":"182"},[1117,1119],"[props]",[507,509],[1810,1819],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",[401,403],"[getAllProfiles]"]